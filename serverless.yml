service: node-template-lambda

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}
  memorySize: 1024
  timeout: 600

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - secretsmanager:GetSecretValue
          Resource: arn:aws:secretsmanager:${self:provider.region}:*:secret:${self:custom.secretName}-*

  vpc:
    securityGroupIds:
      - ${env:SECURITY_GROUP_ID, ''}
    subnetIds:
      - ${env:SUBNET_ID_1, ''}
      - ${env:SUBNET_ID_2, ''}
      - ${env:SUBNET_ID_3, ''}

functions:
  main:
    handler: main.handler
    events:
      - http:
          path: process-data
          method: post
    environment:
      DB_PROXY_ENDPOINT: ${env:DB_PROXY_ENDPOINT, ''}
      DB_PORT: ${env:DB_PORT, ''}
      DB_NAME: ${env:DB_NAME, ''}
      DB_USERNAME: ${env:DB_USERNAME, ''}
      DB_PASSWORD: ${env:DB_PASSWORD, ''}
      TEST_ENV: ${env:TEST_ENV, ''}


plugins:
  - serverless-dotenv-plugin

custom:
  secretName: ${self:service}-${self:provider.stage}-secrets
  dotenv:
    path: .env  

package:
  individually: true
  exclude:
    - .git/**
    - .gitignore
    - .env
    - README.md

resources:
  Resources:
    SecretsManagerSecret:
      Type: AWS::SecretsManager::Secret
      Properties:
        Name: ${self:custom.secretName}
        Description: Secrets for ${self:service} Lambda function
        SecretString: '{"DB_PROXY_ENDPOINT":"","DB_PORT":"","DB_NAME":"","DB_USERNAME":"","DB_PASSWORD":""}'
